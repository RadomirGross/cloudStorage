
services:

  postgres:
    image: postgres:16-alpine
    container_name: cloudstorage-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - cloudstorage-network


  redis:
    image: redis:7-alpine
    container_name: cloudstorage-redis
    ports:
      - "6379:6379"
    networks:
      - cloudstorage-network


  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z-cpuv1
    container_name: cloudstorage-minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - cloudstorage-network


  app:
    image: grossradomir/cloud_storage:1.1
    container_name: cloudstorage-app
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATA_REDIS_HOST: redis
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
    ports:
      - "80:8080"
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - cloudstorage-network
    restart: unless-stopped

volumes:
  postgres_data:
  minio_data:

networks:
  cloudstorage-network:
    driver: bridge
